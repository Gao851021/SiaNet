### YamlMime:ManagedReference
items:
- uid: SiaNet.Sequential
  commentId: T:SiaNet.Sequential
  id: Sequential
  parent: SiaNet
  children:
  - SiaNet.Sequential.#ctor
  - SiaNet.Sequential.Add(SiaNet.Layers.BaseLayer)
  - SiaNet.Sequential.BatchEnd
  - SiaNet.Sequential.BatchStart
  - SiaNet.Sequential.Compile(SiaNet.Engine.OptimizerType,SiaNet.Engine.LossType,SiaNet.Engine.MetricType)
  - SiaNet.Sequential.Compile(SiaNet.Optimizers.BaseOptimizer,SiaNet.Engine.LossType,SiaNet.Engine.MetricType)
  - SiaNet.Sequential.EpochEnd
  - SiaNet.Sequential.EpochStart
  - SiaNet.Sequential.Layers
  - SiaNet.Sequential.LearningHistory
  - SiaNet.Sequential.LoadModel(System.String)
  - SiaNet.Sequential.OnBatchEnd(System.Int32,System.Int32,System.Single,System.Single)
  - SiaNet.Sequential.OnBatchStart(System.Int32,System.Int32)
  - SiaNet.Sequential.OnEpochEnd(System.Int32,System.Int64,System.Single,System.Single,System.Single,System.Single,System.Int64)
  - SiaNet.Sequential.OnEpochStart(System.Int32)
  - SiaNet.Sequential.OnTrainingEnd(SiaNet.History,System.Int64)
  - SiaNet.Sequential.Predict(SiaNet.Data.DataFrame)
  - SiaNet.Sequential.Predict(SiaNet.Data.DataFrame,System.Int32)
  - SiaNet.Sequential.SaveModel(System.String)
  - SiaNet.Sequential.Train(SiaNet.Data.DataFrameIter,System.Int32,System.Int32,SiaNet.Data.DataFrameIter)
  - SiaNet.Sequential.TrainingEnd
  langs:
  - csharp
  - vb
  name: Sequential
  nameWithType: Sequential
  fullName: SiaNet.Sequential
  type: Class
  source:
    remote:
      path: SiaNet/TrainPredict.cs
      branch: master
      repo: https://github.com/deepakkumar1984/SiaNet
    id: Sequential
    path: ../SiaNet/TrainPredict.cs
    startLine: 10
  assemblies:
  - SiaNet
  namespace: SiaNet
  summary: "\nThe Sequential model is a linear stack of layers. Use model to add layers with Add method. Train function to train the layers with dataset. Predict function to invoke prediction against new data.\n"
  example: []
  syntax:
    content: public class Sequential
    content.vb: Public Class Sequential
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: SiaNet.Sequential.Layers
  commentId: P:SiaNet.Sequential.Layers
  id: Layers
  parent: SiaNet.Sequential
  langs:
  - csharp
  - vb
  name: Layers
  nameWithType: Sequential.Layers
  fullName: SiaNet.Sequential.Layers
  type: Property
  source:
    remote:
      path: SiaNet/Sequential.cs
      branch: master
      repo: https://github.com/deepakkumar1984/SiaNet
    id: Layers
    path: ../SiaNet/Sequential.cs
    startLine: 22
  assemblies:
  - SiaNet
  namespace: SiaNet
  summary: "\nStach of layers for this model\n"
  example: []
  syntax:
    content: public List<BaseLayer> Layers { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{SiaNet.Layers.BaseLayer}
      description: "\nThe layers.\n"
    content.vb: Public Property Layers As List(Of BaseLayer)
  overload: SiaNet.Sequential.Layers*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: SiaNet.Sequential.#ctor
  commentId: M:SiaNet.Sequential.#ctor
  id: '#ctor'
  parent: SiaNet.Sequential
  langs:
  - csharp
  - vb
  name: Sequential()
  nameWithType: Sequential.Sequential()
  fullName: SiaNet.Sequential.Sequential()
  type: Constructor
  source:
    remote:
      path: SiaNet/Sequential.cs
      branch: master
      repo: https://github.com/deepakkumar1984/SiaNet
    id: .ctor
    path: ../SiaNet/Sequential.cs
    startLine: 51
  assemblies:
  - SiaNet
  namespace: SiaNet
  summary: "\nInitializes a new instance of the <xref href=\"SiaNet.Sequential\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public Sequential()
    content.vb: Public Sub New
  overload: SiaNet.Sequential.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SiaNet.Sequential.Add(SiaNet.Layers.BaseLayer)
  commentId: M:SiaNet.Sequential.Add(SiaNet.Layers.BaseLayer)
  id: Add(SiaNet.Layers.BaseLayer)
  parent: SiaNet.Sequential
  langs:
  - csharp
  - vb
  name: Add(BaseLayer)
  nameWithType: Sequential.Add(BaseLayer)
  fullName: SiaNet.Sequential.Add(SiaNet.Layers.BaseLayer)
  type: Method
  source:
    remote:
      path: SiaNet/Sequential.cs
      branch: master
      repo: https://github.com/deepakkumar1984/SiaNet
    id: Add
    path: ../SiaNet/Sequential.cs
    startLine: 70
  assemblies:
  - SiaNet
  namespace: SiaNet
  summary: "\nFunction to add layer to the sequential model.\n<p>\nExample use:\n<pre><code>var model = new Sequential();\nmodel.EpochEnd += Model_EpochEnd;\nmodel.Add(new Dense(100, ActType.ReLU));\nmodel.Add(new Dense(50, ActType.ReLU));\nmodel.Add(new Dense(1, ActType.Sigmoid));</code></pre>\n</p>\n"
  example: []
  syntax:
    content: public void Add(BaseLayer l)
    parameters:
    - id: l
      type: SiaNet.Layers.BaseLayer
      description: The l.
    content.vb: Public Sub Add(l As BaseLayer)
  overload: SiaNet.Sequential.Add*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SiaNet.Sequential.Compile(SiaNet.Engine.OptimizerType,SiaNet.Engine.LossType,SiaNet.Engine.MetricType)
  commentId: M:SiaNet.Sequential.Compile(SiaNet.Engine.OptimizerType,SiaNet.Engine.LossType,SiaNet.Engine.MetricType)
  id: Compile(SiaNet.Engine.OptimizerType,SiaNet.Engine.LossType,SiaNet.Engine.MetricType)
  parent: SiaNet.Sequential
  langs:
  - csharp
  - vb
  name: Compile(OptimizerType, LossType, MetricType)
  nameWithType: Sequential.Compile(OptimizerType, LossType, MetricType)
  fullName: SiaNet.Sequential.Compile(SiaNet.Engine.OptimizerType, SiaNet.Engine.LossType, SiaNet.Engine.MetricType)
  type: Method
  source:
    remote:
      path: SiaNet/Sequential.cs
      branch: master
      repo: https://github.com/deepakkumar1984/SiaNet
    id: Compile
    path: ../SiaNet/Sequential.cs
    startLine: 162
  assemblies:
  - SiaNet
  namespace: SiaNet
  summary: "\nBefore training a model, you need to configure the learning process, which is done via the compile method. It receives three arguments:\n<p>\n1. An optimizer.This could be the OptimizerType enum or an instance of the Optimizer class.\n</p><p>\n2. A loss function.This is the objective that the model will try to minimize.\nIt can be the LossType enum identifier of an existing loss function (such as CategoricalCrossentropy or MeanSquaredError), or it can be an instance of the loss class.\n</p>\n<p>\n3. A metric function.For any classification problem you will want the Accuracy of model. A metric could be the MetricType enum or instance of metric class.\n</p>\n"
  example: []
  syntax:
    content: public void Compile(OptimizerType optimizer, LossType loss, MetricType metric)
    parameters:
    - id: optimizer
      type: SiaNet.Engine.OptimizerType
      description: The optimizer type.
    - id: loss
      type: SiaNet.Engine.LossType
      description: The loss type.
    - id: metric
      type: SiaNet.Engine.MetricType
      description: The metric type.
    content.vb: Public Sub Compile(optimizer As OptimizerType, loss As LossType, metric As MetricType)
  overload: SiaNet.Sequential.Compile*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SiaNet.Sequential.Compile(SiaNet.Optimizers.BaseOptimizer,SiaNet.Engine.LossType,SiaNet.Engine.MetricType)
  commentId: M:SiaNet.Sequential.Compile(SiaNet.Optimizers.BaseOptimizer,SiaNet.Engine.LossType,SiaNet.Engine.MetricType)
  id: Compile(SiaNet.Optimizers.BaseOptimizer,SiaNet.Engine.LossType,SiaNet.Engine.MetricType)
  parent: SiaNet.Sequential
  langs:
  - csharp
  - vb
  name: Compile(BaseOptimizer, LossType, MetricType)
  nameWithType: Sequential.Compile(BaseOptimizer, LossType, MetricType)
  fullName: SiaNet.Sequential.Compile(SiaNet.Optimizers.BaseOptimizer, SiaNet.Engine.LossType, SiaNet.Engine.MetricType)
  type: Method
  source:
    remote:
      path: SiaNet/Sequential.cs
      branch: master
      repo: https://github.com/deepakkumar1984/SiaNet
    id: Compile
    path: ../SiaNet/Sequential.cs
    startLine: 184
  assemblies:
  - SiaNet
  namespace: SiaNet
  summary: "\nBefore training a model, you need to configure the learning process, which is done via the compile method. It receives three arguments:\n<p>\n1. An optimizer.This could be the OptimizerType enum or an instance of the Optimizer class.\n</p><p>\n2. A loss function.This is the objective that the model will try to minimize.\nIt can be the LossType enum identifier of an existing loss function (such as CategoricalCrossentropy or MeanSquaredError), or it can be an instance of the loss class.\n</p>\n<p>\n3. A metric function.For any classification problem you will want the Accuracy of model. A metric could be the MetricType enum or instance of metric class.\n</p>\n"
  example: []
  syntax:
    content: public void Compile(BaseOptimizer optimizer, LossType loss, MetricType metric)
    parameters:
    - id: optimizer
      type: SiaNet.Optimizers.BaseOptimizer
      description: The optimizer instance.
    - id: loss
      type: SiaNet.Engine.LossType
      description: The loss type.
    - id: metric
      type: SiaNet.Engine.MetricType
      description: The metric type.
    content.vb: Public Sub Compile(optimizer As BaseOptimizer, loss As LossType, metric As MetricType)
  overload: SiaNet.Sequential.Compile*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SiaNet.Sequential.SaveModel(System.String)
  commentId: M:SiaNet.Sequential.SaveModel(System.String)
  id: SaveModel(System.String)
  parent: SiaNet.Sequential
  langs:
  - csharp
  - vb
  name: SaveModel(String)
  nameWithType: Sequential.SaveModel(String)
  fullName: SiaNet.Sequential.SaveModel(System.String)
  type: Method
  source:
    remote:
      path: SiaNet/Sequential.cs
      branch: master
      repo: https://github.com/deepakkumar1984/SiaNet
    id: SaveModel
    path: ../SiaNet/Sequential.cs
    startLine: 195
  assemblies:
  - SiaNet
  namespace: SiaNet
  summary: "\nSaves the model in json format to the file path.\n"
  example: []
  syntax:
    content: public void SaveModel(string filePath)
    parameters:
    - id: filePath
      type: System.String
      description: The file path.
    content.vb: Public Sub SaveModel(filePath As String)
  overload: SiaNet.Sequential.SaveModel*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SiaNet.Sequential.LoadModel(System.String)
  commentId: M:SiaNet.Sequential.LoadModel(System.String)
  id: LoadModel(System.String)
  parent: SiaNet.Sequential
  langs:
  - csharp
  - vb
  name: LoadModel(String)
  nameWithType: Sequential.LoadModel(String)
  fullName: SiaNet.Sequential.LoadModel(System.String)
  type: Method
  source:
    remote:
      path: SiaNet/Sequential.cs
      branch: master
      repo: https://github.com/deepakkumar1984/SiaNet
    id: LoadModel
    path: ../SiaNet/Sequential.cs
    startLine: 208
  assemblies:
  - SiaNet
  namespace: SiaNet
  summary: "\nLoads the model from the saved json to the Sequential model instance.\n"
  example: []
  syntax:
    content: public static Sequential LoadModel(string filePath)
    parameters:
    - id: filePath
      type: System.String
      description: The file path.
    return:
      type: SiaNet.Sequential
      description: ''
    content.vb: Public Shared Function LoadModel(filePath As String) As Sequential
  overload: SiaNet.Sequential.LoadModel*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SiaNet.Sequential.LearningHistory
  commentId: P:SiaNet.Sequential.LearningHistory
  id: LearningHistory
  parent: SiaNet.Sequential
  langs:
  - csharp
  - vb
  name: LearningHistory
  nameWithType: Sequential.LearningHistory
  fullName: SiaNet.Sequential.LearningHistory
  type: Property
  source:
    remote:
      path: SiaNet/TrainPredict.cs
      branch: master
      repo: https://github.com/deepakkumar1984/SiaNet
    id: LearningHistory
    path: ../SiaNet/TrainPredict.cs
    startLine: 43
  assemblies:
  - SiaNet
  namespace: SiaNet
  summary: "\nGets or sets the learning history.\n"
  example: []
  syntax:
    content: public History LearningHistory { get; set; }
    parameters: []
    return:
      type: SiaNet.History
      description: "\nThe learning history.\n"
    content.vb: Public Property LearningHistory As History
  overload: SiaNet.Sequential.LearningHistory*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: SiaNet.Sequential.BatchEnd
  commentId: E:SiaNet.Sequential.BatchEnd
  id: BatchEnd
  parent: SiaNet.Sequential
  langs:
  - csharp
  - vb
  name: BatchEnd
  nameWithType: Sequential.BatchEnd
  fullName: SiaNet.Sequential.BatchEnd
  type: Event
  source:
    remote:
      path: SiaNet/TrainPredict.cs
      branch: master
      repo: https://github.com/deepakkumar1984/SiaNet
    id: BatchEnd
    path: ../SiaNet/TrainPredict.cs
    startLine: 48
  assemblies:
  - SiaNet
  namespace: SiaNet
  summary: "\nOccurs when [batch end].\n"
  example: []
  syntax:
    content: public event EventHandler<BatchEndEventArgs> BatchEnd
    return:
      type: System.EventHandler{SiaNet.Events.BatchEndEventArgs}
    content.vb: Public Event BatchEnd As EventHandler(Of BatchEndEventArgs)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SiaNet.Sequential.BatchStart
  commentId: E:SiaNet.Sequential.BatchStart
  id: BatchStart
  parent: SiaNet.Sequential
  langs:
  - csharp
  - vb
  name: BatchStart
  nameWithType: Sequential.BatchStart
  fullName: SiaNet.Sequential.BatchStart
  type: Event
  source:
    remote:
      path: SiaNet/TrainPredict.cs
      branch: master
      repo: https://github.com/deepakkumar1984/SiaNet
    id: BatchStart
    path: ../SiaNet/TrainPredict.cs
    startLine: 53
  assemblies:
  - SiaNet
  namespace: SiaNet
  summary: "\nOccurs when [on batch start].\n"
  example: []
  syntax:
    content: public event EventHandler<BatchStartEventArgs> BatchStart
    return:
      type: System.EventHandler{SiaNet.Events.BatchStartEventArgs}
    content.vb: Public Event BatchStart As EventHandler(Of BatchStartEventArgs)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SiaNet.Sequential.EpochEnd
  commentId: E:SiaNet.Sequential.EpochEnd
  id: EpochEnd
  parent: SiaNet.Sequential
  langs:
  - csharp
  - vb
  name: EpochEnd
  nameWithType: Sequential.EpochEnd
  fullName: SiaNet.Sequential.EpochEnd
  type: Event
  source:
    remote:
      path: SiaNet/TrainPredict.cs
      branch: master
      repo: https://github.com/deepakkumar1984/SiaNet
    id: EpochEnd
    path: ../SiaNet/TrainPredict.cs
    startLine: 58
  assemblies:
  - SiaNet
  namespace: SiaNet
  summary: "\nOccurs when [on epoch end].\n"
  example: []
  syntax:
    content: public event EventHandler<EpochEndEventArgs> EpochEnd
    return:
      type: System.EventHandler{SiaNet.Events.EpochEndEventArgs}
    content.vb: Public Event EpochEnd As EventHandler(Of EpochEndEventArgs)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SiaNet.Sequential.EpochStart
  commentId: E:SiaNet.Sequential.EpochStart
  id: EpochStart
  parent: SiaNet.Sequential
  langs:
  - csharp
  - vb
  name: EpochStart
  nameWithType: Sequential.EpochStart
  fullName: SiaNet.Sequential.EpochStart
  type: Event
  source:
    remote:
      path: SiaNet/TrainPredict.cs
      branch: master
      repo: https://github.com/deepakkumar1984/SiaNet
    id: EpochStart
    path: ../SiaNet/TrainPredict.cs
    startLine: 63
  assemblies:
  - SiaNet
  namespace: SiaNet
  summary: "\nOccurs when [on epoch start].\n"
  example: []
  syntax:
    content: public event EventHandler<EpochStartEventArgs> EpochStart
    return:
      type: System.EventHandler{SiaNet.Events.EpochStartEventArgs}
    content.vb: Public Event EpochStart As EventHandler(Of EpochStartEventArgs)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SiaNet.Sequential.TrainingEnd
  commentId: E:SiaNet.Sequential.TrainingEnd
  id: TrainingEnd
  parent: SiaNet.Sequential
  langs:
  - csharp
  - vb
  name: TrainingEnd
  nameWithType: Sequential.TrainingEnd
  fullName: SiaNet.Sequential.TrainingEnd
  type: Event
  source:
    remote:
      path: SiaNet/TrainPredict.cs
      branch: master
      repo: https://github.com/deepakkumar1984/SiaNet
    id: TrainingEnd
    path: ../SiaNet/TrainPredict.cs
    startLine: 68
  assemblies:
  - SiaNet
  namespace: SiaNet
  summary: "\nOccurs when [on training end].\n"
  example: []
  syntax:
    content: public event EventHandler<TrainingEndEventArgs> TrainingEnd
    return:
      type: System.EventHandler{SiaNet.Events.TrainingEndEventArgs}
    content.vb: Public Event TrainingEnd As EventHandler(Of TrainingEndEventArgs)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SiaNet.Sequential.Train(SiaNet.Data.DataFrameIter,System.Int32,System.Int32,SiaNet.Data.DataFrameIter)
  commentId: M:SiaNet.Sequential.Train(SiaNet.Data.DataFrameIter,System.Int32,System.Int32,SiaNet.Data.DataFrameIter)
  id: Train(SiaNet.Data.DataFrameIter,System.Int32,System.Int32,SiaNet.Data.DataFrameIter)
  parent: SiaNet.Sequential
  langs:
  - csharp
  - vb
  name: Train(DataFrameIter, Int32, Int32, DataFrameIter)
  nameWithType: Sequential.Train(DataFrameIter, Int32, Int32, DataFrameIter)
  fullName: SiaNet.Sequential.Train(SiaNet.Data.DataFrameIter, System.Int32, System.Int32, SiaNet.Data.DataFrameIter)
  type: Method
  source:
    remote:
      path: SiaNet/TrainPredict.cs
      branch: master
      repo: https://github.com/deepakkumar1984/SiaNet
    id: Train
    path: ../SiaNet/TrainPredict.cs
    startLine: 77
  assemblies:
  - SiaNet
  namespace: SiaNet
  summary: "\nTrains the model for a given number of epochs (iterations on a dataset).\n"
  example: []
  syntax:
    content: public void Train(DataFrameIter train, int epochs, int batchSize, DataFrameIter val = null)
    parameters:
    - id: train
      type: SiaNet.Data.DataFrameIter
      description: The train dataset which is an instance of DataFrame Iter.
    - id: epochs
      type: System.Int32
      description: Integer. Number of epochs to train the model. An epoch is an iteration over the entire x and y data provided. Note that in conjunction with initial_epoch,  epochs is to be understood as &quot;final epoch&quot;. The model is not trained for a number of iterations given by epochs, but merely until the epoch of index epochs is reached.
    - id: batchSize
      type: System.Int32
      description: Integer or None. Number of samples per gradient update. If unspecified, batch_size will default to 32.
    - id: val
      type: SiaNet.Data.DataFrameIter
      description: The validation set of data to evaluate the model at every epoch.
    content.vb: Public Sub Train(train As DataFrameIter, epochs As Integer, batchSize As Integer, val As DataFrameIter = Nothing)
  overload: SiaNet.Sequential.Train*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SiaNet.Sequential.Predict(SiaNet.Data.DataFrame)
  commentId: M:SiaNet.Sequential.Predict(SiaNet.Data.DataFrame)
  id: Predict(SiaNet.Data.DataFrame)
  parent: SiaNet.Sequential
  langs:
  - csharp
  - vb
  name: Predict(DataFrame)
  nameWithType: Sequential.Predict(DataFrame)
  fullName: SiaNet.Sequential.Predict(SiaNet.Data.DataFrame)
  type: Method
  source:
    remote:
      path: SiaNet/TrainPredict.cs
      branch: master
      repo: https://github.com/deepakkumar1984/SiaNet
    id: Predict
    path: ../SiaNet/TrainPredict.cs
    startLine: 199
  assemblies:
  - SiaNet
  namespace: SiaNet
  summary: "\nGenerates output predictions for the input samples.\n"
  example: []
  syntax:
    content: public Tensor Predict(DataFrame x)
    parameters:
    - id: x
      type: SiaNet.Data.DataFrame
      description: The input data frame to run prediction.
    return:
      type: SiaNet.Engine.Tensor
      description: ''
    content.vb: Public Function Predict(x As DataFrame) As Tensor
  overload: SiaNet.Sequential.Predict*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SiaNet.Sequential.Predict(SiaNet.Data.DataFrame,System.Int32)
  commentId: M:SiaNet.Sequential.Predict(SiaNet.Data.DataFrame,System.Int32)
  id: Predict(SiaNet.Data.DataFrame,System.Int32)
  parent: SiaNet.Sequential
  langs:
  - csharp
  - vb
  name: Predict(DataFrame, Int32)
  nameWithType: Sequential.Predict(DataFrame, Int32)
  fullName: SiaNet.Sequential.Predict(SiaNet.Data.DataFrame, System.Int32)
  type: Method
  source:
    remote:
      path: SiaNet/TrainPredict.cs
      branch: master
      repo: https://github.com/deepakkumar1984/SiaNet
    id: Predict
    path: ../SiaNet/TrainPredict.cs
    startLine: 224
  assemblies:
  - SiaNet
  namespace: SiaNet
  summary: "\nGenerates output predictions for the input samples. Computation is done in batches.\n"
  example: []
  syntax:
    content: public Tensor Predict(DataFrame x, int batch_size)
    parameters:
    - id: x
      type: SiaNet.Data.DataFrame
      description: The input data frame to run prediction.
    - id: batch_size
      type: System.Int32
      description: Size of the batch.
    return:
      type: SiaNet.Engine.Tensor
      description: ''
    content.vb: Public Function Predict(x As DataFrame, batch_size As Integer) As Tensor
  overload: SiaNet.Sequential.Predict*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SiaNet.Sequential.OnBatchEnd(System.Int32,System.Int32,System.Single,System.Single)
  commentId: M:SiaNet.Sequential.OnBatchEnd(System.Int32,System.Int32,System.Single,System.Single)
  id: OnBatchEnd(System.Int32,System.Int32,System.Single,System.Single)
  parent: SiaNet.Sequential
  langs:
  - csharp
  - vb
  name: OnBatchEnd(Int32, Int32, Single, Single)
  nameWithType: Sequential.OnBatchEnd(Int32, Int32, Single, Single)
  fullName: SiaNet.Sequential.OnBatchEnd(System.Int32, System.Int32, System.Single, System.Single)
  type: Method
  source:
    remote:
      path: SiaNet/TrainPredict.cs
      branch: master
      repo: https://github.com/deepakkumar1984/SiaNet
    id: OnBatchEnd
    path: ../SiaNet/TrainPredict.cs
    startLine: 257
  assemblies:
  - SiaNet
  namespace: SiaNet
  summary: "\nCalled when [batch end].\n"
  example: []
  syntax:
    content: protected void OnBatchEnd(int epoch, int batch, float loss, float metric)
    parameters:
    - id: epoch
      type: System.Int32
      description: The epoch.
    - id: batch
      type: System.Int32
      description: The batch.
    - id: loss
      type: System.Single
      description: The loss.
    - id: metric
      type: System.Single
      description: The metric.
    content.vb: Protected Sub OnBatchEnd(epoch As Integer, batch As Integer, loss As Single, metric As Single)
  overload: SiaNet.Sequential.OnBatchEnd*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SiaNet.Sequential.OnBatchStart(System.Int32,System.Int32)
  commentId: M:SiaNet.Sequential.OnBatchStart(System.Int32,System.Int32)
  id: OnBatchStart(System.Int32,System.Int32)
  parent: SiaNet.Sequential
  langs:
  - csharp
  - vb
  name: OnBatchStart(Int32, Int32)
  nameWithType: Sequential.OnBatchStart(Int32, Int32)
  fullName: SiaNet.Sequential.OnBatchStart(System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: SiaNet/TrainPredict.cs
      branch: master
      repo: https://github.com/deepakkumar1984/SiaNet
    id: OnBatchStart
    path: ../SiaNet/TrainPredict.cs
    startLine: 267
  assemblies:
  - SiaNet
  namespace: SiaNet
  summary: "\nCalled when [batch start].\n"
  example: []
  syntax:
    content: protected void OnBatchStart(int epoch, int batch)
    parameters:
    - id: epoch
      type: System.Int32
      description: The epoch.
    - id: batch
      type: System.Int32
      description: The batch.
    content.vb: Protected Sub OnBatchStart(epoch As Integer, batch As Integer)
  overload: SiaNet.Sequential.OnBatchStart*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SiaNet.Sequential.OnEpochEnd(System.Int32,System.Int64,System.Single,System.Single,System.Single,System.Single,System.Int64)
  commentId: M:SiaNet.Sequential.OnEpochEnd(System.Int32,System.Int64,System.Single,System.Single,System.Single,System.Single,System.Int64)
  id: OnEpochEnd(System.Int32,System.Int64,System.Single,System.Single,System.Single,System.Single,System.Int64)
  parent: SiaNet.Sequential
  langs:
  - csharp
  - vb
  name: OnEpochEnd(Int32, Int64, Single, Single, Single, Single, Int64)
  nameWithType: Sequential.OnEpochEnd(Int32, Int64, Single, Single, Single, Single, Int64)
  fullName: SiaNet.Sequential.OnEpochEnd(System.Int32, System.Int64, System.Single, System.Single, System.Single, System.Single, System.Int64)
  type: Method
  source:
    remote:
      path: SiaNet/TrainPredict.cs
      branch: master
      repo: https://github.com/deepakkumar1984/SiaNet
    id: OnEpochEnd
    path: ../SiaNet/TrainPredict.cs
    startLine: 282
  assemblies:
  - SiaNet
  namespace: SiaNet
  summary: "\nCalled when [epoch end].\n"
  example: []
  syntax:
    content: protected void OnEpochEnd(int epoch, long samplesSeenPerSec, float loss, float validationLoss, float metric, float validationMetric, long duration)
    parameters:
    - id: epoch
      type: System.Int32
      description: The epoch.
    - id: samplesSeenPerSec
      type: System.Int64
      description: The samples seen per sec.
    - id: loss
      type: System.Single
      description: The loss.
    - id: validationLoss
      type: System.Single
      description: The validation loss.
    - id: metric
      type: System.Single
      description: The metric.
    - id: validationMetric
      type: System.Single
      description: The validation metric.
    - id: duration
      type: System.Int64
      description: The duration.
    content.vb: Protected Sub OnEpochEnd(epoch As Integer, samplesSeenPerSec As Long, loss As Single, validationLoss As Single, metric As Single, validationMetric As Single, duration As Long)
  overload: SiaNet.Sequential.OnEpochEnd*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SiaNet.Sequential.OnEpochStart(System.Int32)
  commentId: M:SiaNet.Sequential.OnEpochStart(System.Int32)
  id: OnEpochStart(System.Int32)
  parent: SiaNet.Sequential
  langs:
  - csharp
  - vb
  name: OnEpochStart(Int32)
  nameWithType: Sequential.OnEpochStart(Int32)
  fullName: SiaNet.Sequential.OnEpochStart(System.Int32)
  type: Method
  source:
    remote:
      path: SiaNet/TrainPredict.cs
      branch: master
      repo: https://github.com/deepakkumar1984/SiaNet
    id: OnEpochStart
    path: ../SiaNet/TrainPredict.cs
    startLine: 299
  assemblies:
  - SiaNet
  namespace: SiaNet
  summary: "\nCalled when [epoch start].\n"
  example: []
  syntax:
    content: protected void OnEpochStart(int epoch)
    parameters:
    - id: epoch
      type: System.Int32
      description: The epoch.
    content.vb: Protected Sub OnEpochStart(epoch As Integer)
  overload: SiaNet.Sequential.OnEpochStart*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SiaNet.Sequential.OnTrainingEnd(SiaNet.History,System.Int64)
  commentId: M:SiaNet.Sequential.OnTrainingEnd(SiaNet.History,System.Int64)
  id: OnTrainingEnd(SiaNet.History,System.Int64)
  parent: SiaNet.Sequential
  langs:
  - csharp
  - vb
  name: OnTrainingEnd(History, Int64)
  nameWithType: Sequential.OnTrainingEnd(History, Int64)
  fullName: SiaNet.Sequential.OnTrainingEnd(SiaNet.History, System.Int64)
  type: Method
  source:
    remote:
      path: SiaNet/TrainPredict.cs
      branch: master
      repo: https://github.com/deepakkumar1984/SiaNet
    id: OnTrainingEnd
    path: ../SiaNet/TrainPredict.cs
    startLine: 309
  assemblies:
  - SiaNet
  namespace: SiaNet
  summary: "\nCalled when [training end].\n"
  example: []
  syntax:
    content: protected void OnTrainingEnd(History history, long duration)
    parameters:
    - id: history
      type: SiaNet.History
      description: The history.
    - id: duration
      type: System.Int64
      description: The duration.
    content.vb: Protected Sub OnTrainingEnd(history As History, duration As Long)
  overload: SiaNet.Sequential.OnTrainingEnd*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
references:
- uid: SiaNet
  commentId: N:SiaNet
  name: SiaNet
  nameWithType: SiaNet
  fullName: SiaNet
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: SiaNet.Sequential.Layers*
  commentId: Overload:SiaNet.Sequential.Layers
  name: Layers
  nameWithType: Sequential.Layers
  fullName: SiaNet.Sequential.Layers
- uid: System.Collections.Generic.List{SiaNet.Layers.BaseLayer}
  commentId: T:System.Collections.Generic.List{SiaNet.Layers.BaseLayer}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<BaseLayer>
  nameWithType: List<BaseLayer>
  fullName: System.Collections.Generic.List<SiaNet.Layers.BaseLayer>
  nameWithType.vb: List(Of BaseLayer)
  fullName.vb: System.Collections.Generic.List(Of SiaNet.Layers.BaseLayer)
  name.vb: List(Of BaseLayer)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SiaNet.Layers.BaseLayer
    name: BaseLayer
    nameWithType: BaseLayer
    fullName: SiaNet.Layers.BaseLayer
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SiaNet.Layers.BaseLayer
    name: BaseLayer
    nameWithType: BaseLayer
    fullName: SiaNet.Layers.BaseLayer
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: SiaNet.Sequential
  commentId: T:SiaNet.Sequential
  parent: SiaNet
  name: Sequential
  nameWithType: Sequential
  fullName: SiaNet.Sequential
- uid: SiaNet.Sequential.#ctor*
  commentId: Overload:SiaNet.Sequential.#ctor
  name: Sequential
  nameWithType: Sequential.Sequential
  fullName: SiaNet.Sequential.Sequential
- uid: SiaNet.Sequential.Add*
  commentId: Overload:SiaNet.Sequential.Add
  name: Add
  nameWithType: Sequential.Add
  fullName: SiaNet.Sequential.Add
- uid: SiaNet.Layers.BaseLayer
  commentId: T:SiaNet.Layers.BaseLayer
  parent: SiaNet.Layers
  name: BaseLayer
  nameWithType: BaseLayer
  fullName: SiaNet.Layers.BaseLayer
- uid: SiaNet.Layers
  commentId: N:SiaNet.Layers
  name: SiaNet.Layers
  nameWithType: SiaNet.Layers
  fullName: SiaNet.Layers
- uid: SiaNet.Sequential.Compile*
  commentId: Overload:SiaNet.Sequential.Compile
  name: Compile
  nameWithType: Sequential.Compile
  fullName: SiaNet.Sequential.Compile
- uid: SiaNet.Engine.OptimizerType
  commentId: T:SiaNet.Engine.OptimizerType
  parent: SiaNet.Engine
  name: OptimizerType
  nameWithType: OptimizerType
  fullName: SiaNet.Engine.OptimizerType
- uid: SiaNet.Engine.LossType
  commentId: T:SiaNet.Engine.LossType
  parent: SiaNet.Engine
  name: LossType
  nameWithType: LossType
  fullName: SiaNet.Engine.LossType
- uid: SiaNet.Engine.MetricType
  commentId: T:SiaNet.Engine.MetricType
  parent: SiaNet.Engine
  name: MetricType
  nameWithType: MetricType
  fullName: SiaNet.Engine.MetricType
- uid: SiaNet.Engine
  commentId: N:SiaNet.Engine
  name: SiaNet.Engine
  nameWithType: SiaNet.Engine
  fullName: SiaNet.Engine
- uid: SiaNet.Optimizers.BaseOptimizer
  commentId: T:SiaNet.Optimizers.BaseOptimizer
  parent: SiaNet.Optimizers
  name: BaseOptimizer
  nameWithType: BaseOptimizer
  fullName: SiaNet.Optimizers.BaseOptimizer
- uid: SiaNet.Optimizers
  commentId: N:SiaNet.Optimizers
  name: SiaNet.Optimizers
  nameWithType: SiaNet.Optimizers
  fullName: SiaNet.Optimizers
- uid: SiaNet.Sequential.SaveModel*
  commentId: Overload:SiaNet.Sequential.SaveModel
  name: SaveModel
  nameWithType: Sequential.SaveModel
  fullName: SiaNet.Sequential.SaveModel
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: SiaNet.Sequential.LoadModel*
  commentId: Overload:SiaNet.Sequential.LoadModel
  name: LoadModel
  nameWithType: Sequential.LoadModel
  fullName: SiaNet.Sequential.LoadModel
- uid: SiaNet.Sequential.LearningHistory*
  commentId: Overload:SiaNet.Sequential.LearningHistory
  name: LearningHistory
  nameWithType: Sequential.LearningHistory
  fullName: SiaNet.Sequential.LearningHistory
- uid: SiaNet.History
  commentId: T:SiaNet.History
  parent: SiaNet
  name: History
  nameWithType: History
  fullName: SiaNet.History
- uid: System.EventHandler{SiaNet.Events.BatchEndEventArgs}
  commentId: T:System.EventHandler{SiaNet.Events.BatchEndEventArgs}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<BatchEndEventArgs>
  nameWithType: EventHandler<BatchEndEventArgs>
  fullName: System.EventHandler<SiaNet.Events.BatchEndEventArgs>
  nameWithType.vb: EventHandler(Of BatchEndEventArgs)
  fullName.vb: System.EventHandler(Of SiaNet.Events.BatchEndEventArgs)
  name.vb: EventHandler(Of BatchEndEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SiaNet.Events.BatchEndEventArgs
    name: BatchEndEventArgs
    nameWithType: BatchEndEventArgs
    fullName: SiaNet.Events.BatchEndEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SiaNet.Events.BatchEndEventArgs
    name: BatchEndEventArgs
    nameWithType: BatchEndEventArgs
    fullName: SiaNet.Events.BatchEndEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: System.EventHandler`1
  commentId: T:System.EventHandler`1
  isExternal: true
  name: EventHandler<TEventArgs>
  nameWithType: EventHandler<TEventArgs>
  fullName: System.EventHandler<TEventArgs>
  nameWithType.vb: EventHandler(Of TEventArgs)
  fullName.vb: System.EventHandler(Of TEventArgs)
  name.vb: EventHandler(Of TEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEventArgs
    nameWithType: TEventArgs
    fullName: TEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: System.EventHandler{SiaNet.Events.BatchStartEventArgs}
  commentId: T:System.EventHandler{SiaNet.Events.BatchStartEventArgs}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<BatchStartEventArgs>
  nameWithType: EventHandler<BatchStartEventArgs>
  fullName: System.EventHandler<SiaNet.Events.BatchStartEventArgs>
  nameWithType.vb: EventHandler(Of BatchStartEventArgs)
  fullName.vb: System.EventHandler(Of SiaNet.Events.BatchStartEventArgs)
  name.vb: EventHandler(Of BatchStartEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SiaNet.Events.BatchStartEventArgs
    name: BatchStartEventArgs
    nameWithType: BatchStartEventArgs
    fullName: SiaNet.Events.BatchStartEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SiaNet.Events.BatchStartEventArgs
    name: BatchStartEventArgs
    nameWithType: BatchStartEventArgs
    fullName: SiaNet.Events.BatchStartEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: System.EventHandler{SiaNet.Events.EpochEndEventArgs}
  commentId: T:System.EventHandler{SiaNet.Events.EpochEndEventArgs}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<EpochEndEventArgs>
  nameWithType: EventHandler<EpochEndEventArgs>
  fullName: System.EventHandler<SiaNet.Events.EpochEndEventArgs>
  nameWithType.vb: EventHandler(Of EpochEndEventArgs)
  fullName.vb: System.EventHandler(Of SiaNet.Events.EpochEndEventArgs)
  name.vb: EventHandler(Of EpochEndEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SiaNet.Events.EpochEndEventArgs
    name: EpochEndEventArgs
    nameWithType: EpochEndEventArgs
    fullName: SiaNet.Events.EpochEndEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SiaNet.Events.EpochEndEventArgs
    name: EpochEndEventArgs
    nameWithType: EpochEndEventArgs
    fullName: SiaNet.Events.EpochEndEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: System.EventHandler{SiaNet.Events.EpochStartEventArgs}
  commentId: T:System.EventHandler{SiaNet.Events.EpochStartEventArgs}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<EpochStartEventArgs>
  nameWithType: EventHandler<EpochStartEventArgs>
  fullName: System.EventHandler<SiaNet.Events.EpochStartEventArgs>
  nameWithType.vb: EventHandler(Of EpochStartEventArgs)
  fullName.vb: System.EventHandler(Of SiaNet.Events.EpochStartEventArgs)
  name.vb: EventHandler(Of EpochStartEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SiaNet.Events.EpochStartEventArgs
    name: EpochStartEventArgs
    nameWithType: EpochStartEventArgs
    fullName: SiaNet.Events.EpochStartEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SiaNet.Events.EpochStartEventArgs
    name: EpochStartEventArgs
    nameWithType: EpochStartEventArgs
    fullName: SiaNet.Events.EpochStartEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: System.EventHandler{SiaNet.Events.TrainingEndEventArgs}
  commentId: T:System.EventHandler{SiaNet.Events.TrainingEndEventArgs}
  parent: System
  definition: System.EventHandler`1
  name: EventHandler<TrainingEndEventArgs>
  nameWithType: EventHandler<TrainingEndEventArgs>
  fullName: System.EventHandler<SiaNet.Events.TrainingEndEventArgs>
  nameWithType.vb: EventHandler(Of TrainingEndEventArgs)
  fullName.vb: System.EventHandler(Of SiaNet.Events.TrainingEndEventArgs)
  name.vb: EventHandler(Of TrainingEndEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SiaNet.Events.TrainingEndEventArgs
    name: TrainingEndEventArgs
    nameWithType: TrainingEndEventArgs
    fullName: SiaNet.Events.TrainingEndEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SiaNet.Events.TrainingEndEventArgs
    name: TrainingEndEventArgs
    nameWithType: TrainingEndEventArgs
    fullName: SiaNet.Events.TrainingEndEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: SiaNet.Sequential.Train*
  commentId: Overload:SiaNet.Sequential.Train
  name: Train
  nameWithType: Sequential.Train
  fullName: SiaNet.Sequential.Train
- uid: SiaNet.Data.DataFrameIter
  commentId: T:SiaNet.Data.DataFrameIter
  parent: SiaNet.Data
  name: DataFrameIter
  nameWithType: DataFrameIter
  fullName: SiaNet.Data.DataFrameIter
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: SiaNet.Data
  commentId: N:SiaNet.Data
  name: SiaNet.Data
  nameWithType: SiaNet.Data
  fullName: SiaNet.Data
- uid: SiaNet.Sequential.Predict*
  commentId: Overload:SiaNet.Sequential.Predict
  name: Predict
  nameWithType: Sequential.Predict
  fullName: SiaNet.Sequential.Predict
- uid: SiaNet.Data.DataFrame
  commentId: T:SiaNet.Data.DataFrame
  parent: SiaNet.Data
  name: DataFrame
  nameWithType: DataFrame
  fullName: SiaNet.Data.DataFrame
- uid: SiaNet.Engine.Tensor
  commentId: T:SiaNet.Engine.Tensor
  parent: SiaNet.Engine
  name: Tensor
  nameWithType: Tensor
  fullName: SiaNet.Engine.Tensor
- uid: SiaNet.Sequential.OnBatchEnd*
  commentId: Overload:SiaNet.Sequential.OnBatchEnd
  name: OnBatchEnd
  nameWithType: Sequential.OnBatchEnd
  fullName: SiaNet.Sequential.OnBatchEnd
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: SiaNet.Sequential.OnBatchStart*
  commentId: Overload:SiaNet.Sequential.OnBatchStart
  name: OnBatchStart
  nameWithType: Sequential.OnBatchStart
  fullName: SiaNet.Sequential.OnBatchStart
- uid: SiaNet.Sequential.OnEpochEnd*
  commentId: Overload:SiaNet.Sequential.OnEpochEnd
  name: OnEpochEnd
  nameWithType: Sequential.OnEpochEnd
  fullName: SiaNet.Sequential.OnEpochEnd
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: SiaNet.Sequential.OnEpochStart*
  commentId: Overload:SiaNet.Sequential.OnEpochStart
  name: OnEpochStart
  nameWithType: Sequential.OnEpochStart
  fullName: SiaNet.Sequential.OnEpochStart
- uid: SiaNet.Sequential.OnTrainingEnd*
  commentId: Overload:SiaNet.Sequential.OnTrainingEnd
  name: OnTrainingEnd
  nameWithType: Sequential.OnTrainingEnd
  fullName: SiaNet.Sequential.OnTrainingEnd
