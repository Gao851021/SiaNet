### YamlMime:ManagedReference
items:
- uid: SiaNet.Layers.Repeat
  commentId: T:SiaNet.Layers.Repeat
  id: Repeat
  parent: SiaNet.Layers
  children:
  - SiaNet.Layers.Repeat.#ctor(System.Int32,System.Int32)
  - SiaNet.Layers.Repeat.Axis
  - SiaNet.Layers.Repeat.Backward(SiaNet.Engine.Tensor)
  - SiaNet.Layers.Repeat.Forward(SiaNet.Engine.Tensor)
  - SiaNet.Layers.Repeat.NumTimes
  langs:
  - csharp
  - vb
  name: Repeat
  nameWithType: Repeat
  fullName: SiaNet.Layers.Repeat
  type: Class
  source:
    remote:
      path: SiaNet/Layers/Core/Repeat.cs
      branch: master
      repo: https://github.com/deepakkumar1984/SiaNet
    id: Repeat
    path: ../SiaNet/Layers/Core/Repeat.cs
    startLine: 8
  assemblies:
  - SiaNet
  namespace: SiaNet.Layers
  summary: "\nRepeat the input for specified number of times, for an axis\n"
  example: []
  syntax:
    content: 'public class Repeat : BaseLayer'
    content.vb: >-
      Public Class Repeat
          Inherits BaseLayer
  seealso:
  - linkId: SiaNet.Layers.BaseLayer
    commentId: T:SiaNet.Layers.BaseLayer
  inheritance:
  - System.Object
  - SiaNet.Layers.BaseLayer
  inheritedMembers:
  - SiaNet.Layers.BaseLayer.Params
  - SiaNet.Layers.BaseLayer.Input
  - SiaNet.Layers.BaseLayer.Output
  - SiaNet.Layers.BaseLayer.Name
  - SiaNet.Layers.BaseLayer.SkipPred
  - SiaNet.Layers.BaseLayer.Item(System.String)
  - SiaNet.Layers.BaseLayer.BuildParam(System.String,System.Int64[],SiaNet.Engine.DataType,SiaNet.Initializers.BaseInitializer,SiaNet.Constraints.BaseConstraint,SiaNet.Regularizers.BaseRegularizer,System.Boolean)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: SiaNet.Layers.Repeat.Axis
  commentId: P:SiaNet.Layers.Repeat.Axis
  id: Axis
  parent: SiaNet.Layers.Repeat
  langs:
  - csharp
  - vb
  name: Axis
  nameWithType: Repeat.Axis
  fullName: SiaNet.Layers.Repeat.Axis
  type: Property
  source:
    remote:
      path: SiaNet/Layers/Core/Repeat.cs
      branch: master
      repo: https://github.com/deepakkumar1984/SiaNet
    id: Axis
    path: ../SiaNet/Layers/Core/Repeat.cs
    startLine: 16
  assemblies:
  - SiaNet
  namespace: SiaNet.Layers
  summary: "\nAxis to which the tensor will be repeated\n"
  example: []
  syntax:
    content: public int Axis { get; set; }
    parameters: []
    return:
      type: System.Int32
      description: "\nThe axis.\n"
    content.vb: Public Property Axis As Integer
  overload: SiaNet.Layers.Repeat.Axis*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: SiaNet.Layers.Repeat.NumTimes
  commentId: P:SiaNet.Layers.Repeat.NumTimes
  id: NumTimes
  parent: SiaNet.Layers.Repeat
  langs:
  - csharp
  - vb
  name: NumTimes
  nameWithType: Repeat.NumTimes
  fullName: SiaNet.Layers.Repeat.NumTimes
  type: Property
  source:
    remote:
      path: SiaNet/Layers/Core/Repeat.cs
      branch: master
      repo: https://github.com/deepakkumar1984/SiaNet
    id: NumTimes
    path: ../SiaNet/Layers/Core/Repeat.cs
    startLine: 24
  assemblies:
  - SiaNet
  namespace: SiaNet.Layers
  summary: "\nInteger, repetition factor\n"
  example: []
  syntax:
    content: public int NumTimes { get; set; }
    parameters: []
    return:
      type: System.Int32
      description: "\nThe number times.\n"
    content.vb: Public Property NumTimes As Integer
  overload: SiaNet.Layers.Repeat.NumTimes*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: SiaNet.Layers.Repeat.#ctor(System.Int32,System.Int32)
  commentId: M:SiaNet.Layers.Repeat.#ctor(System.Int32,System.Int32)
  id: '#ctor(System.Int32,System.Int32)'
  parent: SiaNet.Layers.Repeat
  langs:
  - csharp
  - vb
  name: Repeat(Int32, Int32)
  nameWithType: Repeat.Repeat(Int32, Int32)
  fullName: SiaNet.Layers.Repeat.Repeat(System.Int32, System.Int32)
  type: Constructor
  source:
    remote:
      path: SiaNet/Layers/Core/Repeat.cs
      branch: master
      repo: https://github.com/deepakkumar1984/SiaNet
    id: .ctor
    path: ../SiaNet/Layers/Core/Repeat.cs
    startLine: 31
  assemblies:
  - SiaNet
  namespace: SiaNet.Layers
  summary: "\nInitializes a new instance of the <xref href=\"SiaNet.Layers.Repeat\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public Repeat(int numTimes, int axis = 0)
    parameters:
    - id: numTimes
      type: System.Int32
      description: Integer, repetition factor.
    - id: axis
      type: System.Int32
      description: Axis to which the tensor will be repeated
    content.vb: Public Sub New(numTimes As Integer, axis As Integer = 0)
  overload: SiaNet.Layers.Repeat.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SiaNet.Layers.Repeat.Forward(SiaNet.Engine.Tensor)
  commentId: M:SiaNet.Layers.Repeat.Forward(SiaNet.Engine.Tensor)
  id: Forward(SiaNet.Engine.Tensor)
  parent: SiaNet.Layers.Repeat
  langs:
  - csharp
  - vb
  name: Forward(Tensor)
  nameWithType: Repeat.Forward(Tensor)
  fullName: SiaNet.Layers.Repeat.Forward(SiaNet.Engine.Tensor)
  type: Method
  source:
    remote:
      path: SiaNet/Layers/Core/Repeat.cs
      branch: master
      repo: https://github.com/deepakkumar1984/SiaNet
    id: Forward
    path: ../SiaNet/Layers/Core/Repeat.cs
    startLine: 42
  assemblies:
  - SiaNet
  namespace: SiaNet.Layers
  summary: "\nForwards the inputs and compute the output\n"
  example: []
  syntax:
    content: public override void Forward(Tensor x)
    parameters:
    - id: x
      type: SiaNet.Engine.Tensor
      description: The input tensor for this layer.
    content.vb: Public Overrides Sub Forward(x As Tensor)
  overridden: SiaNet.Layers.BaseLayer.Forward(SiaNet.Engine.Tensor)
  overload: SiaNet.Layers.Repeat.Forward*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: SiaNet.Layers.Repeat.Backward(SiaNet.Engine.Tensor)
  commentId: M:SiaNet.Layers.Repeat.Backward(SiaNet.Engine.Tensor)
  id: Backward(SiaNet.Engine.Tensor)
  parent: SiaNet.Layers.Repeat
  langs:
  - csharp
  - vb
  name: Backward(Tensor)
  nameWithType: Repeat.Backward(Tensor)
  fullName: SiaNet.Layers.Repeat.Backward(SiaNet.Engine.Tensor)
  type: Method
  source:
    remote:
      path: SiaNet/Layers/Core/Repeat.cs
      branch: master
      repo: https://github.com/deepakkumar1984/SiaNet
    id: Backward
    path: ../SiaNet/Layers/Core/Repeat.cs
    startLine: 52
  assemblies:
  - SiaNet
  namespace: SiaNet.Layers
  summary: "\nCalculate the gradient of this layer function\n"
  example: []
  syntax:
    content: public override void Backward(Tensor outputgrad)
    parameters:
    - id: outputgrad
      type: SiaNet.Engine.Tensor
      description: The calculated output grad from previous layer.
    content.vb: Public Overrides Sub Backward(outputgrad As Tensor)
  overridden: SiaNet.Layers.BaseLayer.Backward(SiaNet.Engine.Tensor)
  overload: SiaNet.Layers.Repeat.Backward*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: SiaNet.Layers.BaseLayer
  commentId: T:SiaNet.Layers.BaseLayer
  parent: SiaNet.Layers
  name: BaseLayer
  nameWithType: BaseLayer
  fullName: SiaNet.Layers.BaseLayer
- uid: SiaNet.Layers
  commentId: N:SiaNet.Layers
  name: SiaNet.Layers
  nameWithType: SiaNet.Layers
  fullName: SiaNet.Layers
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: SiaNet.Layers.BaseLayer.Params
  commentId: F:SiaNet.Layers.BaseLayer.Params
  parent: SiaNet.Layers.BaseLayer
  name: Params
  nameWithType: BaseLayer.Params
  fullName: SiaNet.Layers.BaseLayer.Params
- uid: SiaNet.Layers.BaseLayer.Input
  commentId: F:SiaNet.Layers.BaseLayer.Input
  parent: SiaNet.Layers.BaseLayer
  name: Input
  nameWithType: BaseLayer.Input
  fullName: SiaNet.Layers.BaseLayer.Input
- uid: SiaNet.Layers.BaseLayer.Output
  commentId: F:SiaNet.Layers.BaseLayer.Output
  parent: SiaNet.Layers.BaseLayer
  name: Output
  nameWithType: BaseLayer.Output
  fullName: SiaNet.Layers.BaseLayer.Output
- uid: SiaNet.Layers.BaseLayer.Name
  commentId: P:SiaNet.Layers.BaseLayer.Name
  parent: SiaNet.Layers.BaseLayer
  name: Name
  nameWithType: BaseLayer.Name
  fullName: SiaNet.Layers.BaseLayer.Name
- uid: SiaNet.Layers.BaseLayer.SkipPred
  commentId: P:SiaNet.Layers.BaseLayer.SkipPred
  parent: SiaNet.Layers.BaseLayer
  name: SkipPred
  nameWithType: BaseLayer.SkipPred
  fullName: SiaNet.Layers.BaseLayer.SkipPred
- uid: SiaNet.Layers.BaseLayer.Item(System.String)
  commentId: P:SiaNet.Layers.BaseLayer.Item(System.String)
  parent: SiaNet.Layers.BaseLayer
  isExternal: true
  name: Item[String]
  nameWithType: BaseLayer.Item[String]
  fullName: SiaNet.Layers.BaseLayer.Item[System.String]
  nameWithType.vb: BaseLayer.Item(String)
  fullName.vb: SiaNet.Layers.BaseLayer.Item(System.String)
  name.vb: Item(String)
  spec.csharp:
  - uid: SiaNet.Layers.BaseLayer.Item(System.String)
    name: Item
    nameWithType: BaseLayer.Item
    fullName: SiaNet.Layers.BaseLayer.Item
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: SiaNet.Layers.BaseLayer.Item(System.String)
    name: Item
    nameWithType: BaseLayer.Item
    fullName: SiaNet.Layers.BaseLayer.Item
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SiaNet.Layers.BaseLayer.BuildParam(System.String,System.Int64[],SiaNet.Engine.DataType,SiaNet.Initializers.BaseInitializer,SiaNet.Constraints.BaseConstraint,SiaNet.Regularizers.BaseRegularizer,System.Boolean)
  commentId: M:SiaNet.Layers.BaseLayer.BuildParam(System.String,System.Int64[],SiaNet.Engine.DataType,SiaNet.Initializers.BaseInitializer,SiaNet.Constraints.BaseConstraint,SiaNet.Regularizers.BaseRegularizer,System.Boolean)
  parent: SiaNet.Layers.BaseLayer
  isExternal: true
  name: BuildParam(String, Int64[], DataType, BaseInitializer, BaseConstraint, BaseRegularizer, Boolean)
  nameWithType: BaseLayer.BuildParam(String, Int64[], DataType, BaseInitializer, BaseConstraint, BaseRegularizer, Boolean)
  fullName: SiaNet.Layers.BaseLayer.BuildParam(System.String, System.Int64[], SiaNet.Engine.DataType, SiaNet.Initializers.BaseInitializer, SiaNet.Constraints.BaseConstraint, SiaNet.Regularizers.BaseRegularizer, System.Boolean)
  nameWithType.vb: BaseLayer.BuildParam(String, Int64(), DataType, BaseInitializer, BaseConstraint, BaseRegularizer, Boolean)
  fullName.vb: SiaNet.Layers.BaseLayer.BuildParam(System.String, System.Int64(), SiaNet.Engine.DataType, SiaNet.Initializers.BaseInitializer, SiaNet.Constraints.BaseConstraint, SiaNet.Regularizers.BaseRegularizer, System.Boolean)
  name.vb: BuildParam(String, Int64(), DataType, BaseInitializer, BaseConstraint, BaseRegularizer, Boolean)
  spec.csharp:
  - uid: SiaNet.Layers.BaseLayer.BuildParam(System.String,System.Int64[],SiaNet.Engine.DataType,SiaNet.Initializers.BaseInitializer,SiaNet.Constraints.BaseConstraint,SiaNet.Regularizers.BaseRegularizer,System.Boolean)
    name: BuildParam
    nameWithType: BaseLayer.BuildParam
    fullName: SiaNet.Layers.BaseLayer.BuildParam
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SiaNet.Engine.DataType
    name: DataType
    nameWithType: DataType
    fullName: SiaNet.Engine.DataType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SiaNet.Initializers.BaseInitializer
    name: BaseInitializer
    nameWithType: BaseInitializer
    fullName: SiaNet.Initializers.BaseInitializer
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SiaNet.Constraints.BaseConstraint
    name: BaseConstraint
    nameWithType: BaseConstraint
    fullName: SiaNet.Constraints.BaseConstraint
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SiaNet.Regularizers.BaseRegularizer
    name: BaseRegularizer
    nameWithType: BaseRegularizer
    fullName: SiaNet.Regularizers.BaseRegularizer
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SiaNet.Layers.BaseLayer.BuildParam(System.String,System.Int64[],SiaNet.Engine.DataType,SiaNet.Initializers.BaseInitializer,SiaNet.Constraints.BaseConstraint,SiaNet.Regularizers.BaseRegularizer,System.Boolean)
    name: BuildParam
    nameWithType: BaseLayer.BuildParam
    fullName: SiaNet.Layers.BaseLayer.BuildParam
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SiaNet.Engine.DataType
    name: DataType
    nameWithType: DataType
    fullName: SiaNet.Engine.DataType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SiaNet.Initializers.BaseInitializer
    name: BaseInitializer
    nameWithType: BaseInitializer
    fullName: SiaNet.Initializers.BaseInitializer
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SiaNet.Constraints.BaseConstraint
    name: BaseConstraint
    nameWithType: BaseConstraint
    fullName: SiaNet.Constraints.BaseConstraint
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SiaNet.Regularizers.BaseRegularizer
    name: BaseRegularizer
    nameWithType: BaseRegularizer
    fullName: SiaNet.Regularizers.BaseRegularizer
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: SiaNet.Layers.Repeat.Axis*
  commentId: Overload:SiaNet.Layers.Repeat.Axis
  name: Axis
  nameWithType: Repeat.Axis
  fullName: SiaNet.Layers.Repeat.Axis
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: SiaNet.Layers.Repeat.NumTimes*
  commentId: Overload:SiaNet.Layers.Repeat.NumTimes
  name: NumTimes
  nameWithType: Repeat.NumTimes
  fullName: SiaNet.Layers.Repeat.NumTimes
- uid: SiaNet.Layers.Repeat
  commentId: T:SiaNet.Layers.Repeat
  name: Repeat
  nameWithType: Repeat
  fullName: SiaNet.Layers.Repeat
- uid: SiaNet.Layers.Repeat.#ctor*
  commentId: Overload:SiaNet.Layers.Repeat.#ctor
  name: Repeat
  nameWithType: Repeat.Repeat
  fullName: SiaNet.Layers.Repeat.Repeat
- uid: SiaNet.Layers.BaseLayer.Forward(SiaNet.Engine.Tensor)
  commentId: M:SiaNet.Layers.BaseLayer.Forward(SiaNet.Engine.Tensor)
  parent: SiaNet.Layers.BaseLayer
  name: Forward(Tensor)
  nameWithType: BaseLayer.Forward(Tensor)
  fullName: SiaNet.Layers.BaseLayer.Forward(SiaNet.Engine.Tensor)
  spec.csharp:
  - uid: SiaNet.Layers.BaseLayer.Forward(SiaNet.Engine.Tensor)
    name: Forward
    nameWithType: BaseLayer.Forward
    fullName: SiaNet.Layers.BaseLayer.Forward
  - name: (
    nameWithType: (
    fullName: (
  - uid: SiaNet.Engine.Tensor
    name: Tensor
    nameWithType: Tensor
    fullName: SiaNet.Engine.Tensor
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SiaNet.Layers.BaseLayer.Forward(SiaNet.Engine.Tensor)
    name: Forward
    nameWithType: BaseLayer.Forward
    fullName: SiaNet.Layers.BaseLayer.Forward
  - name: (
    nameWithType: (
    fullName: (
  - uid: SiaNet.Engine.Tensor
    name: Tensor
    nameWithType: Tensor
    fullName: SiaNet.Engine.Tensor
  - name: )
    nameWithType: )
    fullName: )
- uid: SiaNet.Layers.Repeat.Forward*
  commentId: Overload:SiaNet.Layers.Repeat.Forward
  name: Forward
  nameWithType: Repeat.Forward
  fullName: SiaNet.Layers.Repeat.Forward
- uid: SiaNet.Engine.Tensor
  commentId: T:SiaNet.Engine.Tensor
  parent: SiaNet.Engine
  name: Tensor
  nameWithType: Tensor
  fullName: SiaNet.Engine.Tensor
- uid: SiaNet.Engine
  commentId: N:SiaNet.Engine
  name: SiaNet.Engine
  nameWithType: SiaNet.Engine
  fullName: SiaNet.Engine
- uid: SiaNet.Layers.BaseLayer.Backward(SiaNet.Engine.Tensor)
  commentId: M:SiaNet.Layers.BaseLayer.Backward(SiaNet.Engine.Tensor)
  parent: SiaNet.Layers.BaseLayer
  name: Backward(Tensor)
  nameWithType: BaseLayer.Backward(Tensor)
  fullName: SiaNet.Layers.BaseLayer.Backward(SiaNet.Engine.Tensor)
  spec.csharp:
  - uid: SiaNet.Layers.BaseLayer.Backward(SiaNet.Engine.Tensor)
    name: Backward
    nameWithType: BaseLayer.Backward
    fullName: SiaNet.Layers.BaseLayer.Backward
  - name: (
    nameWithType: (
    fullName: (
  - uid: SiaNet.Engine.Tensor
    name: Tensor
    nameWithType: Tensor
    fullName: SiaNet.Engine.Tensor
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SiaNet.Layers.BaseLayer.Backward(SiaNet.Engine.Tensor)
    name: Backward
    nameWithType: BaseLayer.Backward
    fullName: SiaNet.Layers.BaseLayer.Backward
  - name: (
    nameWithType: (
    fullName: (
  - uid: SiaNet.Engine.Tensor
    name: Tensor
    nameWithType: Tensor
    fullName: SiaNet.Engine.Tensor
  - name: )
    nameWithType: )
    fullName: )
- uid: SiaNet.Layers.Repeat.Backward*
  commentId: Overload:SiaNet.Layers.Repeat.Backward
  name: Backward
  nameWithType: Repeat.Backward
  fullName: SiaNet.Layers.Repeat.Backward
