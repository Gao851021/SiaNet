### YamlMime:ManagedReference
items:
- uid: SiaNet.Initializers.RandomUniform
  commentId: T:SiaNet.Initializers.RandomUniform
  id: RandomUniform
  parent: SiaNet.Initializers
  children:
  - SiaNet.Initializers.RandomUniform.#ctor(System.Single,System.Single,System.Nullable{System.Int32})
  - SiaNet.Initializers.RandomUniform.Generate(System.Int64[])
  - SiaNet.Initializers.RandomUniform.MaxVal
  - SiaNet.Initializers.RandomUniform.MinVal
  - SiaNet.Initializers.RandomUniform.Seed
  langs:
  - csharp
  - vb
  name: RandomUniform
  nameWithType: RandomUniform
  fullName: SiaNet.Initializers.RandomUniform
  type: Class
  source:
    remote:
      path: SiaNet/Initializers/RandomUniform.cs
      branch: master
      repo: https://github.com/deepakkumar1984/SiaNet
    id: RandomUniform
    path: ../SiaNet/Initializers/RandomUniform.cs
    startLine: 8
  assemblies:
  - SiaNet
  namespace: SiaNet.Initializers
  summary: "\nInitializer that generates tensors with a uniform distribution.\n"
  example: []
  syntax:
    content: 'public class RandomUniform : BaseInitializer'
    content.vb: >-
      Public Class RandomUniform
          Inherits BaseInitializer
  seealso:
  - linkId: SiaNet.Initializers.BaseInitializer
    commentId: T:SiaNet.Initializers.BaseInitializer
  inheritance:
  - System.Object
  - SiaNet.Initializers.BaseInitializer
  inheritedMembers:
  - SiaNet.Initializers.BaseInitializer.Name
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: SiaNet.Initializers.RandomUniform.MinVal
  commentId: P:SiaNet.Initializers.RandomUniform.MinVal
  id: MinVal
  parent: SiaNet.Initializers.RandomUniform
  langs:
  - csharp
  - vb
  name: MinVal
  nameWithType: RandomUniform.MinVal
  fullName: SiaNet.Initializers.RandomUniform.MinVal
  type: Property
  source:
    remote:
      path: SiaNet/Initializers/RandomUniform.cs
      branch: master
      repo: https://github.com/deepakkumar1984/SiaNet
    id: MinVal
    path: ../SiaNet/Initializers/RandomUniform.cs
    startLine: 16
  assemblies:
  - SiaNet
  namespace: SiaNet.Initializers
  summary: "\nLower bound of the range of random values to generate.\n"
  example: []
  syntax:
    content: public float MinVal { get; set; }
    parameters: []
    return:
      type: System.Single
      description: "\nThe minimum value.\n"
    content.vb: Public Property MinVal As Single
  overload: SiaNet.Initializers.RandomUniform.MinVal*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: SiaNet.Initializers.RandomUniform.MaxVal
  commentId: P:SiaNet.Initializers.RandomUniform.MaxVal
  id: MaxVal
  parent: SiaNet.Initializers.RandomUniform
  langs:
  - csharp
  - vb
  name: MaxVal
  nameWithType: RandomUniform.MaxVal
  fullName: SiaNet.Initializers.RandomUniform.MaxVal
  type: Property
  source:
    remote:
      path: SiaNet/Initializers/RandomUniform.cs
      branch: master
      repo: https://github.com/deepakkumar1984/SiaNet
    id: MaxVal
    path: ../SiaNet/Initializers/RandomUniform.cs
    startLine: 24
  assemblies:
  - SiaNet
  namespace: SiaNet.Initializers
  summary: "\nUpper bound of the range of random values to generate.\n"
  example: []
  syntax:
    content: public float MaxVal { get; set; }
    parameters: []
    return:
      type: System.Single
      description: "\nThe maximum value.\n"
    content.vb: Public Property MaxVal As Single
  overload: SiaNet.Initializers.RandomUniform.MaxVal*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: SiaNet.Initializers.RandomUniform.Seed
  commentId: P:SiaNet.Initializers.RandomUniform.Seed
  id: Seed
  parent: SiaNet.Initializers.RandomUniform
  langs:
  - csharp
  - vb
  name: Seed
  nameWithType: RandomUniform.Seed
  fullName: SiaNet.Initializers.RandomUniform.Seed
  type: Property
  source:
    remote:
      path: SiaNet/Initializers/RandomUniform.cs
      branch: master
      repo: https://github.com/deepakkumar1984/SiaNet
    id: Seed
    path: ../SiaNet/Initializers/RandomUniform.cs
    startLine: 32
  assemblies:
  - SiaNet
  namespace: SiaNet.Initializers
  summary: "\nUsed to seed the random generator.\n"
  example: []
  syntax:
    content: public int? Seed { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Int32}
      description: "\nThe seed.\n"
    content.vb: Public Property Seed As Integer?
  overload: SiaNet.Initializers.RandomUniform.Seed*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: SiaNet.Initializers.RandomUniform.#ctor(System.Single,System.Single,System.Nullable{System.Int32})
  commentId: M:SiaNet.Initializers.RandomUniform.#ctor(System.Single,System.Single,System.Nullable{System.Int32})
  id: '#ctor(System.Single,System.Single,System.Nullable{System.Int32})'
  parent: SiaNet.Initializers.RandomUniform
  langs:
  - csharp
  - vb
  name: RandomUniform(Single, Single, Nullable<Int32>)
  nameWithType: RandomUniform.RandomUniform(Single, Single, Nullable<Int32>)
  fullName: SiaNet.Initializers.RandomUniform.RandomUniform(System.Single, System.Single, System.Nullable<System.Int32>)
  type: Constructor
  source:
    remote:
      path: SiaNet/Initializers/RandomUniform.cs
      branch: master
      repo: https://github.com/deepakkumar1984/SiaNet
    id: .ctor
    path: ../SiaNet/Initializers/RandomUniform.cs
    startLine: 40
  assemblies:
  - SiaNet
  namespace: SiaNet.Initializers
  summary: "\nInitializes a new instance of the <xref href=\"SiaNet.Initializers.RandomUniform\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public RandomUniform(float minval = 0F, float maxval = 0.05F, int? seed = default(int? ))
    parameters:
    - id: minval
      type: System.Single
      description: Lower bound of the range of random values to generate.
    - id: maxval
      type: System.Single
      description: Upper bound of the range of random values to generate.
    - id: seed
      type: System.Nullable{System.Int32}
      description: Used to seed the random generator.
    content.vb: Public Sub New(minval As Single = 0F, maxval As Single = 0.05F, seed As Integer? = Nothing)
  overload: SiaNet.Initializers.RandomUniform.#ctor*
  nameWithType.vb: RandomUniform.RandomUniform(Single, Single, Nullable(Of Int32))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SiaNet.Initializers.RandomUniform.RandomUniform(System.Single, System.Single, System.Nullable(Of System.Int32))
  name.vb: RandomUniform(Single, Single, Nullable(Of Int32))
- uid: SiaNet.Initializers.RandomUniform.Generate(System.Int64[])
  commentId: M:SiaNet.Initializers.RandomUniform.Generate(System.Int64[])
  id: Generate(System.Int64[])
  parent: SiaNet.Initializers.RandomUniform
  langs:
  - csharp
  - vb
  name: Generate(Int64[])
  nameWithType: RandomUniform.Generate(Int64[])
  fullName: SiaNet.Initializers.RandomUniform.Generate(System.Int64[])
  type: Method
  source:
    remote:
      path: SiaNet/Initializers/RandomUniform.cs
      branch: master
      repo: https://github.com/deepakkumar1984/SiaNet
    id: Generate
    path: ../SiaNet/Initializers/RandomUniform.cs
    startLine: 53
  assemblies:
  - SiaNet
  namespace: SiaNet.Initializers
  summary: "\nGenerates a tensor with specified shape.\n"
  example: []
  syntax:
    content: public override Tensor Generate(params long[] shape)
    parameters:
    - id: shape
      type: System.Int64[]
      description: The shape of the tensor.
    return:
      type: SiaNet.Engine.Tensor
      description: ''
    content.vb: Public Overrides Function Generate(ParamArray shape As Long()) As Tensor
  overridden: SiaNet.Initializers.BaseInitializer.Generate(System.Int64[])
  overload: SiaNet.Initializers.RandomUniform.Generate*
  nameWithType.vb: RandomUniform.Generate(Int64())
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: SiaNet.Initializers.RandomUniform.Generate(System.Int64())
  name.vb: Generate(Int64())
references:
- uid: SiaNet.Initializers.BaseInitializer
  commentId: T:SiaNet.Initializers.BaseInitializer
  parent: SiaNet.Initializers
  name: BaseInitializer
  nameWithType: BaseInitializer
  fullName: SiaNet.Initializers.BaseInitializer
- uid: SiaNet.Initializers
  commentId: N:SiaNet.Initializers
  name: SiaNet.Initializers
  nameWithType: SiaNet.Initializers
  fullName: SiaNet.Initializers
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: SiaNet.Initializers.BaseInitializer.Name
  commentId: P:SiaNet.Initializers.BaseInitializer.Name
  parent: SiaNet.Initializers.BaseInitializer
  name: Name
  nameWithType: BaseInitializer.Name
  fullName: SiaNet.Initializers.BaseInitializer.Name
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: SiaNet.Initializers.RandomUniform.MinVal*
  commentId: Overload:SiaNet.Initializers.RandomUniform.MinVal
  name: MinVal
  nameWithType: RandomUniform.MinVal
  fullName: SiaNet.Initializers.RandomUniform.MinVal
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: SiaNet.Initializers.RandomUniform.MaxVal*
  commentId: Overload:SiaNet.Initializers.RandomUniform.MaxVal
  name: MaxVal
  nameWithType: RandomUniform.MaxVal
  fullName: SiaNet.Initializers.RandomUniform.MaxVal
- uid: SiaNet.Initializers.RandomUniform.Seed*
  commentId: Overload:SiaNet.Initializers.RandomUniform.Seed
  name: Seed
  nameWithType: RandomUniform.Seed
  fullName: SiaNet.Initializers.RandomUniform.Seed
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullName.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: SiaNet.Initializers.RandomUniform
  commentId: T:SiaNet.Initializers.RandomUniform
  name: RandomUniform
  nameWithType: RandomUniform
  fullName: SiaNet.Initializers.RandomUniform
- uid: SiaNet.Initializers.RandomUniform.#ctor*
  commentId: Overload:SiaNet.Initializers.RandomUniform.#ctor
  name: RandomUniform
  nameWithType: RandomUniform.RandomUniform
  fullName: SiaNet.Initializers.RandomUniform.RandomUniform
- uid: SiaNet.Initializers.BaseInitializer.Generate(System.Int64[])
  commentId: M:SiaNet.Initializers.BaseInitializer.Generate(System.Int64[])
  parent: SiaNet.Initializers.BaseInitializer
  isExternal: true
  name: Generate(Int64[])
  nameWithType: BaseInitializer.Generate(Int64[])
  fullName: SiaNet.Initializers.BaseInitializer.Generate(System.Int64[])
  nameWithType.vb: BaseInitializer.Generate(Int64())
  fullName.vb: SiaNet.Initializers.BaseInitializer.Generate(System.Int64())
  name.vb: Generate(Int64())
  spec.csharp:
  - uid: SiaNet.Initializers.BaseInitializer.Generate(System.Int64[])
    name: Generate
    nameWithType: BaseInitializer.Generate
    fullName: SiaNet.Initializers.BaseInitializer.Generate
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SiaNet.Initializers.BaseInitializer.Generate(System.Int64[])
    name: Generate
    nameWithType: BaseInitializer.Generate
    fullName: SiaNet.Initializers.BaseInitializer.Generate
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: SiaNet.Initializers.RandomUniform.Generate*
  commentId: Overload:SiaNet.Initializers.RandomUniform.Generate
  name: Generate
  nameWithType: RandomUniform.Generate
  fullName: SiaNet.Initializers.RandomUniform.Generate
- uid: System.Int64[]
  isExternal: true
  name: Int64[]
  nameWithType: Int64[]
  fullName: System.Int64[]
  nameWithType.vb: Int64()
  fullName.vb: System.Int64()
  name.vb: Int64()
  spec.csharp:
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: SiaNet.Engine.Tensor
  commentId: T:SiaNet.Engine.Tensor
  parent: SiaNet.Engine
  name: Tensor
  nameWithType: Tensor
  fullName: SiaNet.Engine.Tensor
- uid: SiaNet.Engine
  commentId: N:SiaNet.Engine
  name: SiaNet.Engine
  nameWithType: SiaNet.Engine
  fullName: SiaNet.Engine
