### YamlMime:ManagedReference
items:
- uid: SiaNet.Losses.CosineProximity
  commentId: T:SiaNet.Losses.CosineProximity
  id: CosineProximity
  parent: SiaNet.Losses
  children:
  - SiaNet.Losses.CosineProximity.#ctor
  - SiaNet.Losses.CosineProximity.Backward(SiaNet.Engine.Tensor,SiaNet.Engine.Tensor)
  - SiaNet.Losses.CosineProximity.Forward(SiaNet.Engine.Tensor,SiaNet.Engine.Tensor)
  langs:
  - csharp
  - vb
  name: CosineProximity
  nameWithType: CosineProximity
  fullName: SiaNet.Losses.CosineProximity
  type: Class
  source:
    remote:
      path: SiaNet/Losses/CosineProximity.cs
      branch: master
      repo: https://github.com/deepakkumar1984/SiaNet
    id: CosineProximity
    path: ../SiaNet/Losses/CosineProximity.cs
    startLine: 10
  assemblies:
  - SiaNet
  namespace: SiaNet.Losses
  summary: "\nCosine Proximity loss function computes the cosine proximity between predicted value and actual value.\nIt is same as Cosine Similarity, which is a measure of similarity between two non-zero vectors of an inner product space that measures the cosine of the angle between them. In this case, note that unit vectors are maximally “similar” if they’re parallel and maximally “dissimilar” if they’re orthogonal (perpendicular). \nThis is analogous to the cosine, which is unity (maximum value) when the segments subtend a zero angle and zero (uncorrelated) when the segments are perpendicular.\n"
  example: []
  syntax:
    content: 'public class CosineProximity : BaseLoss'
    content.vb: >-
      Public Class CosineProximity
          Inherits BaseLoss
  seealso:
  - linkId: SiaNet.Losses.BaseLoss
    commentId: T:SiaNet.Losses.BaseLoss
  inheritance:
  - System.Object
  - SiaNet.Losses.BaseLoss
  inheritedMembers:
  - SiaNet.Losses.BaseLoss.Name
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: SiaNet.Losses.CosineProximity.#ctor
  commentId: M:SiaNet.Losses.CosineProximity.#ctor
  id: '#ctor'
  parent: SiaNet.Losses.CosineProximity
  langs:
  - csharp
  - vb
  name: CosineProximity()
  nameWithType: CosineProximity.CosineProximity()
  fullName: SiaNet.Losses.CosineProximity.CosineProximity()
  type: Constructor
  source:
    remote:
      path: SiaNet/Losses/CosineProximity.cs
      branch: master
      repo: https://github.com/deepakkumar1984/SiaNet
    id: .ctor
    path: ../SiaNet/Losses/CosineProximity.cs
    startLine: 15
  assemblies:
  - SiaNet
  namespace: SiaNet.Losses
  summary: "\nInitializes a new instance of the <xref href=\"SiaNet.Losses.CosineProximity\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public CosineProximity()
    content.vb: Public Sub New
  overload: SiaNet.Losses.CosineProximity.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SiaNet.Losses.CosineProximity.Forward(SiaNet.Engine.Tensor,SiaNet.Engine.Tensor)
  commentId: M:SiaNet.Losses.CosineProximity.Forward(SiaNet.Engine.Tensor,SiaNet.Engine.Tensor)
  id: Forward(SiaNet.Engine.Tensor,SiaNet.Engine.Tensor)
  parent: SiaNet.Losses.CosineProximity
  langs:
  - csharp
  - vb
  name: Forward(Tensor, Tensor)
  nameWithType: CosineProximity.Forward(Tensor, Tensor)
  fullName: SiaNet.Losses.CosineProximity.Forward(SiaNet.Engine.Tensor, SiaNet.Engine.Tensor)
  type: Method
  source:
    remote:
      path: SiaNet/Losses/CosineProximity.cs
      branch: master
      repo: https://github.com/deepakkumar1984/SiaNet
    id: Forward
    path: ../SiaNet/Losses/CosineProximity.cs
    startLine: 27
  assemblies:
  - SiaNet
  namespace: SiaNet.Losses
  summary: "\nForwards the inputs and calculate the loss.\n"
  example: []
  syntax:
    content: public override Tensor Forward(Tensor preds, Tensor labels)
    parameters:
    - id: preds
      type: SiaNet.Engine.Tensor
      description: The predicted result.
    - id: labels
      type: SiaNet.Engine.Tensor
      description: The true result.
    return:
      type: SiaNet.Engine.Tensor
      description: ''
    content.vb: Public Overrides Function Forward(preds As Tensor, labels As Tensor) As Tensor
  overridden: SiaNet.Losses.BaseLoss.Forward(SiaNet.Engine.Tensor,SiaNet.Engine.Tensor)
  overload: SiaNet.Losses.CosineProximity.Forward*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: SiaNet.Losses.CosineProximity.Backward(SiaNet.Engine.Tensor,SiaNet.Engine.Tensor)
  commentId: M:SiaNet.Losses.CosineProximity.Backward(SiaNet.Engine.Tensor,SiaNet.Engine.Tensor)
  id: Backward(SiaNet.Engine.Tensor,SiaNet.Engine.Tensor)
  parent: SiaNet.Losses.CosineProximity
  langs:
  - csharp
  - vb
  name: Backward(Tensor, Tensor)
  nameWithType: CosineProximity.Backward(Tensor, Tensor)
  fullName: SiaNet.Losses.CosineProximity.Backward(SiaNet.Engine.Tensor, SiaNet.Engine.Tensor)
  type: Method
  source:
    remote:
      path: SiaNet/Losses/CosineProximity.cs
      branch: master
      repo: https://github.com/deepakkumar1984/SiaNet
    id: Backward
    path: ../SiaNet/Losses/CosineProximity.cs
    startLine: 38
  assemblies:
  - SiaNet
  namespace: SiaNet.Losses
  summary: "\nBackpropagation method to calculate gradient of the loss function\n"
  example: []
  syntax:
    content: public override Tensor Backward(Tensor preds, Tensor labels)
    parameters:
    - id: preds
      type: SiaNet.Engine.Tensor
      description: The predicted result.
    - id: labels
      type: SiaNet.Engine.Tensor
      description: The true result.
    return:
      type: SiaNet.Engine.Tensor
      description: ''
    content.vb: Public Overrides Function Backward(preds As Tensor, labels As Tensor) As Tensor
  overridden: SiaNet.Losses.BaseLoss.Backward(SiaNet.Engine.Tensor,SiaNet.Engine.Tensor)
  overload: SiaNet.Losses.CosineProximity.Backward*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: SiaNet.Losses.BaseLoss
  commentId: T:SiaNet.Losses.BaseLoss
  parent: SiaNet.Losses
  name: BaseLoss
  nameWithType: BaseLoss
  fullName: SiaNet.Losses.BaseLoss
- uid: SiaNet.Losses
  commentId: N:SiaNet.Losses
  name: SiaNet.Losses
  nameWithType: SiaNet.Losses
  fullName: SiaNet.Losses
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: SiaNet.Losses.BaseLoss.Name
  commentId: P:SiaNet.Losses.BaseLoss.Name
  parent: SiaNet.Losses.BaseLoss
  name: Name
  nameWithType: BaseLoss.Name
  fullName: SiaNet.Losses.BaseLoss.Name
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: SiaNet.Losses.CosineProximity
  commentId: T:SiaNet.Losses.CosineProximity
  name: CosineProximity
  nameWithType: CosineProximity
  fullName: SiaNet.Losses.CosineProximity
- uid: SiaNet.Losses.CosineProximity.#ctor*
  commentId: Overload:SiaNet.Losses.CosineProximity.#ctor
  name: CosineProximity
  nameWithType: CosineProximity.CosineProximity
  fullName: SiaNet.Losses.CosineProximity.CosineProximity
- uid: SiaNet.Losses.BaseLoss.Forward(SiaNet.Engine.Tensor,SiaNet.Engine.Tensor)
  commentId: M:SiaNet.Losses.BaseLoss.Forward(SiaNet.Engine.Tensor,SiaNet.Engine.Tensor)
  parent: SiaNet.Losses.BaseLoss
  name: Forward(Tensor, Tensor)
  nameWithType: BaseLoss.Forward(Tensor, Tensor)
  fullName: SiaNet.Losses.BaseLoss.Forward(SiaNet.Engine.Tensor, SiaNet.Engine.Tensor)
  spec.csharp:
  - uid: SiaNet.Losses.BaseLoss.Forward(SiaNet.Engine.Tensor,SiaNet.Engine.Tensor)
    name: Forward
    nameWithType: BaseLoss.Forward
    fullName: SiaNet.Losses.BaseLoss.Forward
  - name: (
    nameWithType: (
    fullName: (
  - uid: SiaNet.Engine.Tensor
    name: Tensor
    nameWithType: Tensor
    fullName: SiaNet.Engine.Tensor
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SiaNet.Engine.Tensor
    name: Tensor
    nameWithType: Tensor
    fullName: SiaNet.Engine.Tensor
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SiaNet.Losses.BaseLoss.Forward(SiaNet.Engine.Tensor,SiaNet.Engine.Tensor)
    name: Forward
    nameWithType: BaseLoss.Forward
    fullName: SiaNet.Losses.BaseLoss.Forward
  - name: (
    nameWithType: (
    fullName: (
  - uid: SiaNet.Engine.Tensor
    name: Tensor
    nameWithType: Tensor
    fullName: SiaNet.Engine.Tensor
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SiaNet.Engine.Tensor
    name: Tensor
    nameWithType: Tensor
    fullName: SiaNet.Engine.Tensor
  - name: )
    nameWithType: )
    fullName: )
- uid: SiaNet.Losses.CosineProximity.Forward*
  commentId: Overload:SiaNet.Losses.CosineProximity.Forward
  name: Forward
  nameWithType: CosineProximity.Forward
  fullName: SiaNet.Losses.CosineProximity.Forward
- uid: SiaNet.Engine.Tensor
  commentId: T:SiaNet.Engine.Tensor
  parent: SiaNet.Engine
  name: Tensor
  nameWithType: Tensor
  fullName: SiaNet.Engine.Tensor
- uid: SiaNet.Engine
  commentId: N:SiaNet.Engine
  name: SiaNet.Engine
  nameWithType: SiaNet.Engine
  fullName: SiaNet.Engine
- uid: SiaNet.Losses.BaseLoss.Backward(SiaNet.Engine.Tensor,SiaNet.Engine.Tensor)
  commentId: M:SiaNet.Losses.BaseLoss.Backward(SiaNet.Engine.Tensor,SiaNet.Engine.Tensor)
  parent: SiaNet.Losses.BaseLoss
  name: Backward(Tensor, Tensor)
  nameWithType: BaseLoss.Backward(Tensor, Tensor)
  fullName: SiaNet.Losses.BaseLoss.Backward(SiaNet.Engine.Tensor, SiaNet.Engine.Tensor)
  spec.csharp:
  - uid: SiaNet.Losses.BaseLoss.Backward(SiaNet.Engine.Tensor,SiaNet.Engine.Tensor)
    name: Backward
    nameWithType: BaseLoss.Backward
    fullName: SiaNet.Losses.BaseLoss.Backward
  - name: (
    nameWithType: (
    fullName: (
  - uid: SiaNet.Engine.Tensor
    name: Tensor
    nameWithType: Tensor
    fullName: SiaNet.Engine.Tensor
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SiaNet.Engine.Tensor
    name: Tensor
    nameWithType: Tensor
    fullName: SiaNet.Engine.Tensor
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SiaNet.Losses.BaseLoss.Backward(SiaNet.Engine.Tensor,SiaNet.Engine.Tensor)
    name: Backward
    nameWithType: BaseLoss.Backward
    fullName: SiaNet.Losses.BaseLoss.Backward
  - name: (
    nameWithType: (
    fullName: (
  - uid: SiaNet.Engine.Tensor
    name: Tensor
    nameWithType: Tensor
    fullName: SiaNet.Engine.Tensor
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SiaNet.Engine.Tensor
    name: Tensor
    nameWithType: Tensor
    fullName: SiaNet.Engine.Tensor
  - name: )
    nameWithType: )
    fullName: )
- uid: SiaNet.Losses.CosineProximity.Backward*
  commentId: Overload:SiaNet.Losses.CosineProximity.Backward
  name: Backward
  nameWithType: CosineProximity.Backward
  fullName: SiaNet.Losses.CosineProximity.Backward
